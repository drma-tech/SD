@using Button = SD.WEB.Resources.Button
@inherits ComponentCore<MySuggestionsPopup>

<ModalHeader>
    <ModalTitle Size="HeadingSize.Is5">Settings</ModalTitle>
    <CloseButton/>
</ModalHeader>
<ModalBody MaxHeight="70">
    <FieldSelect For="@(() => MySuggestions!.MovieGenres)" TValue="IReadOnlyList<MovieGenre>" TEnum="MovieGenre" @bind-SelectedValues="@MySuggestions!.MovieGenres"
                 CssIcon="@FontAwesomeIcons.Film" Multiple="true" Order="o => o.Name">
    </FieldSelect>
    <FieldSelect For="@(() => MySuggestions!.TvGenres)" TValue="IReadOnlyList<TvGenre>" TEnum="TvGenre" @bind-SelectedValues="@MySuggestions!.TvGenres"
                 CssIcon="@FontAwesomeIcons.Tv" Multiple="true" Order="o => o.Name">
    </FieldSelect>
</ModalBody>
<ModalFooter>
    <Button Color="Color.Secondary" Clicked="@(() =>
                                             {
                                                 ModalService.Hide();
                                                 MySuggestionsChanged?.InvokeAsync(MySuggestions);
                                             })" Size="Size.Small">
        @Button.Ok
    </Button>
</ModalFooter>

@code {
    [Parameter] [EditorRequired] public SD.Shared.Models.MySuggestions? MySuggestions { get; set; }
    [Parameter] public EventCallback<SD.Shared.Models.MySuggestions>? MySuggestionsChanged { get; set; }
}