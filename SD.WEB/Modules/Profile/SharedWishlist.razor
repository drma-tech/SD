@page "/shared/wishlist/{type}/{token}"
<SeoHeader Title="@($"Wishlist ({Email}) | {(Type == "movie" ? MediaType.movie.GetName() : MediaType.tv.GetName())}")"></SeoHeader>

@using SD.WEB.Modules.Profile.Components
@using SD.WEB.Modules.Profile.Core
@inherits PageCore<SharedWishlist>
@inject WishListApi WishApi
@inject WatchingListApi WatchingApi
@inject WatchedListApi WatchedApi

<GoogleAdSense Settings="@Settings" Principal="@Principal" Section="@GoogleAdSense.AdUnit.Profile"></GoogleAdSense>

@if (Type == "movie")
{
    <WishlistComponent Core="CoreWishlist" MediaType="MediaType.movie" ShowPrivateAction="false" ShowHeader="true" FullScreen="true"
              Watched="Watched" Watching="Watching" Wish="Wish" IsAuthenticated="IsAuthenticated" UserId="@UserId"
              ExpressionEmpty="(WishList? list) => list == null || list.Movies.Empty()" CustomTitle="@($"Wishlist ({Email}) | {MediaType.movie.GetName()}")">
    </WishlistComponent>
}
else
{
    <WishlistComponent Core="CoreWishlist" MediaType="MediaType.tv" ShowPrivateAction="false" ShowHeader="true" FullScreen="true"
              Watched="Watched" Watching="Watching" Wish="Wish" IsAuthenticated="IsAuthenticated" UserId="@UserId"
              ExpressionEmpty="(WishList? list) => list == null || list.Shows.Empty()" CustomTitle="@($"Wishlist ({Email}) | {MediaType.tv.GetName()}")">
    </WishlistComponent>
}

@code {
    [Parameter] public string? Type { get; set; }
    [Parameter] public string? Token { get; set; }

    public RenderControlCore<WishList?> CoreWishlist { get; set; } = new();
    public WatchedList? Watched { get; set; }
    public WatchingList? Watching { get; set; }
    public WishList? Wish { get; set; }

    public Settings? Settings { get; set; }
    public ClientePrincipal? Principal { get; set; }

    public string? Email { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Email = await PrincipalApi.GetEmail(Token);
    }

    protected override async Task LoadDataRender()
    {
        Settings = await CacheSettingsApi.GetSettings();
        Principal = await PrincipalApi.Get(IsAuthenticated);

        (Watched, Watching, Wish) = await (WatchedApi.Get(IsAuthenticated, null, Token), WatchingApi.Get(IsAuthenticated, null), WishApi.Get(IsAuthenticated, CoreWishlist, Token));
    }

}