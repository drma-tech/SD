@using SD.WEB.Modules.Provider.Resources
@using SD.WEB.Modules.Suggestions.Core
@inherits ComponentCore<PopularIndexComponent>

@inject ImdbPopularApi ImdbPopularApi
@inject TmdbNowPlayingApi TmdbNowPlayingApi

<HeaderComponent Title="@Translations.Popular" IconImage="logo/imdb.png">
    <RadioGroup @bind-CheckedValue="@TypeSelected" Buttons="true" Float="Float.End" Size="Size.ExtraSmall">
        <Radio Value="PopularType.Movie">@(PopularType.Movie.GetName())</Radio>
        <Radio Value="PopularType.Show">@(PopularType.Show.GetName())</Radio>
        <Radio Value="PopularType.Cinema">@(PopularType.Cinema.GetName())</Radio>
    </RadioGroup>
</HeaderComponent>
@if (TypeSelected == PopularType.Movie)
{
    <MediaList TitleHead="@Translations.Popular" MediaListApi="ImdbPopularApi" IsImdb="true" ShowHead="false" MultipleLanguages="false"
               StringParameters="Params" TypeSelected="MediaType.movie" Watched="WatchedList" Watching="WatchingList" Wish="WishList"
               ShowPrivateAction="ShowPrivateAction" OnlyYear="true" IsAuthenticated="IsAuthenticated">
    </MediaList>
}
else if (TypeSelected == PopularType.Show)
{
    <MediaList TitleHead="@Translations.Popular" MediaListApi="ImdbPopularApi" IsImdb="true" ShowHead="false" MultipleLanguages="false"
               StringParameters="Params" TypeSelected="MediaType.tv" Watched="WatchedList" Watching="WatchingList" Wish="WishList"
               ShowPrivateAction="ShowPrivateAction" OnlyYear="true" IsAuthenticated="IsAuthenticated">
    </MediaList>
}
else if (TypeSelected == PopularType.Cinema)
{
    <MediaList ShowHead="false" MediaListApi="TmdbNowPlayingApi" MultiplesRegions="true"
               Watched="WatchedList" Watching="WatchingList" Wish="WishList" ShowPrivateAction="ShowPrivateAction" IsAuthenticated="IsAuthenticated">
    </MediaList>
}

@code {
    [Parameter] [EditorRequired] public WatchedList? WatchedList { get; set; }
    [Parameter] [EditorRequired] public WatchingList? WatchingList { get; set; }
    [Parameter] [EditorRequired] public WishList? WishList { get; set; }
    [Parameter] [EditorRequired] public bool ShowPrivateAction { get; set; }
    [Parameter] [EditorRequired] public bool IsAuthenticated { get; set; }

    public PopularType TypeSelected { get; set; } = PopularType.Movie;

    public Dictionary<string, string> Params { get; set; } = new() { { "mode", "compact" } };
}