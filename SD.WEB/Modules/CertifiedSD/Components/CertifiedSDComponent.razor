@using SD.WEB.Modules.Suggestions.Components
@using SD.WEB.Modules.Suggestions.Core
@using SD.WEB.Modules.Suggestions.Resources
@inherits ComponentCore<CertifiedSDComponent>

@inject TmdbListApi TmdbListApi

<HeaderComponent Title="@Translations.TitleCertifiedSD">
    <Button Float="Float.End" Size="Size.ExtraSmall" Color="Color.Primary" Type="ButtonType.Link" To="@($"/certified-sd/{TypeSelected}")">
        <Blazorise.Icon Name="FontAwesomeIcons.ExpandArrowsAlt"></Blazorise.Icon>
    </Button>
    <RadioGroup @bind-CheckedValue="@TypeSelected" Buttons="true" Float="Float.End" Size="Size.ExtraSmall" Margin="Margin.Is2.FromEnd">
        <Radio Value="MediaType.movie">@(MediaType.movie.GetName())</Radio>
        <Radio Value="MediaType.tv">@(MediaType.tv.GetName())</Radio>
    </RadioGroup>
</HeaderComponent>
@if (TypeSelected == MediaType.movie)
{
    <MediaList MediaListApi="TmdbListApi" List="@EnumLists.CertifiedStreamingDiscoveryMovies" Watched="Watched" Watching="Watching" Wish="Wish"
               ShowPrivateAction="true" IsAuthenticated="IsAuthenticated" ShowHead="false">
    </MediaList>
}
else if (TypeSelected == MediaType.tv)
{
    <MediaList MediaListApi="TmdbListApi" List="@EnumLists.CertifiedStreamingDiscoveryShows" Watched="Watched" Watching="Watching" Wish="Wish"
               ShowPrivateAction="true" IsAuthenticated="IsAuthenticated" ShowHead="false">
    </MediaList>
}

@code {
    [Parameter] [EditorRequired] public WatchedList? Watched { get; set; }
    [Parameter] [EditorRequired] public WatchingList? Watching { get; set; }
    [Parameter] [EditorRequired] public WishList? Wish { get; set; }
    [Parameter] [EditorRequired] public bool ShowPrivateAction { get; set; }
    [Parameter] [EditorRequired] public bool IsAuthenticated { get; set; }

    public MediaType TypeSelected { get; set; } = MediaType.movie;

    public Dictionary<string, string> Params { get; set; } = new() { { "mode", "compact" } };
}