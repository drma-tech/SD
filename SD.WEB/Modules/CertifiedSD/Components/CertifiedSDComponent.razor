@using SD.WEB.Modules.Collections.Core
@using SD.WEB.Modules.Collections.Resources
@inherits ComponentCore<CertifiedSDComponent>

@inject TmdbListApi TmdbListApi

<SectionComponent Title="@Translations.CertifiedSDTitle" Description="@GlobalTranslations.CertifiedDescription" IconName="@IconsFA.Solid.Icon("award").Font">
    <ActionFragment>
        <MudToggleGroup SelectionMode="SelectionMode.SingleSelection" Vertical="false" @bind-Value="TypeSelected" Color="Color.Primary" Class="me-2"
                        CheckMark="true" CheckMarkClass="mx-0">
            <MudToggleItem Value="@MediaType.movie" SelectedIcon="@IconsFA.Solid.Icon("check").Font">
                <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
                    <MudText Typo="Typo.h3" Class="custom-h3" Inline="true">@MediaType.movie.GetName()</MudText>
                </MudHidden>
            </MudToggleItem>
            <MudToggleItem Value="@MediaType.tv" SelectedIcon="@IconsFA.Solid.Icon("check").Font">
                <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
                    <MudText Typo="Typo.h3" Class="custom-h3" Inline="true">@MediaType.tv.GetName()</MudText>
                </MudHidden>
            </MudToggleItem>
        </MudToggleGroup>
        <MudIconButton Icon="@IconsFA.Solid.Icon("expand").Font" Variant="Variant.Filled" Color="Color.Primary" Href="@($"/certified-sd/{TypeSelected}")" />
    </ActionFragment>
    <BodyFragment>
        @if (TypeSelected == MediaType.movie)
        {
            <MediaList MediaListApi="TmdbListApi" List="@EnumLists.CertifiedStreamingDiscoveryMovies" Watched="Watched" Watching="Watching" Wish="Wish"
                       ShowPrivateAction="true" IsAuthenticated="IsAuthenticated" ShowHead="false" FullPage="true">
            </MediaList>
        }
        else if (TypeSelected == MediaType.tv)
        {
            <MediaList MediaListApi="TmdbListApi" List="@EnumLists.CertifiedStreamingDiscoveryShows" Watched="Watched" Watching="Watching" Wish="Wish"
                       ShowPrivateAction="true" IsAuthenticated="IsAuthenticated" ShowHead="false" FullPage="true">
            </MediaList>
        }
    </BodyFragment>
</SectionComponent>

@code {
    [Parameter][EditorRequired] public WatchedList? Watched { get; set; }
    [Parameter][EditorRequired] public WatchingList? Watching { get; set; }
    [Parameter][EditorRequired] public WishList? Wish { get; set; }
    [Parameter][EditorRequired] public bool ShowPrivateAction { get; set; }
    [Parameter][EditorRequired] public bool IsAuthenticated { get; set; }

    public MediaType TypeSelected { get; set; } = MediaType.movie;

    public Dictionary<string, string> Params { get; set; } = new() { { "mode", "compact" } };
}