@inherits ComponentCore<SubscriptionPlans>

@using SD.WEB.Modules.Subscription.Resources

<MudStack Row="true" Class="mb-3" Breakpoint="Breakpoint.Xs" Spacing="2">
    <MudCard Outlined="true" Elevation="4">
        <MudCardContent Class="pa-3">
            <MudText Typo="Typo.subtitle1" Align="Align.Center">@AccountProduct.Basic.GetName()</MudText>
            <MudText Typo="Typo.h6" Align="Align.Center">@Translations.Free</MudText>
            <MudGrid Spacing="1" Justify="Justify.SpaceBetween">
                <MudItem xs="9">
                    <MudText>@Translations.NoAds</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Icon="@IconsFA.Solid.Icon("xmark").Font" Color="Color.Error" Size="Size.Small" Label="true" Class="chip-no-text" />
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.MyPlatforms</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Basic.GetRestrictions().FavoriteProviders.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.MySuggestions</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Error" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Basic.GetRestrictions().MySuggestions.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.Watched</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Basic.GetRestrictions().Watched.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.Watching</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Basic.GetRestrictions().Watching.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.Wishlist</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Basic.GetRestrictions().Wishlist.ToString()</MudText>
                    </MudChip>
                </MudItem>
            </MudGrid>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Success" FullWidth="true" Disabled="true" Size="AppStateStatic.Size">
                @Resources.Translations.YourCurrentPlan
            </MudButton>
        </MudCardActions>
    </MudCard>
    <MudCard Outlined="true" Elevation="4">
        <MudCardContent Class="pa-3">
            <MudText Typo="Typo.subtitle1" Align="Align.Center">@AccountProduct.Standard.GetName()</MudText>
            <MudText Typo="Typo.h6" Align="Align.Center">@GetPrice(AccountProduct.Standard) / @Cycle?.GetDescription()</MudText>
            <MudGrid Spacing="1" Justify="Justify.SpaceBetween">
                <MudItem xs="9">
                    <MudText>@Translations.NoAds</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" Size="Size.Small" Label="true" Class="chip-no-text" />
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.MyPlatforms</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Standard.GetRestrictions().FavoriteProviders.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.MySuggestions</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Standard.GetRestrictions().MySuggestions.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="8">
                    <MudText>@Profile.Resources.Translations.Watched</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Standard.GetRestrictions().Watched.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.Watching</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Standard.GetRestrictions().Watching.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.Wishlist</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Standard.GetRestrictions().Wishlist.ToString()</MudText>
                    </MudChip>
                </MudItem>
            </MudGrid>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Size="AppStateStatic.Size" OnClick="@(() => OpenCheckout(AccountProduct.Standard))">
                @Translations.Select
            </MudButton>
        </MudCardActions>
    </MudCard>
    <MudCard Outlined="true" Elevation="4">
        <MudCardContent Class="pa-3">
            <MudText Typo="Typo.subtitle1" Align="Align.Center">@AccountProduct.Premium.GetName()</MudText>
            <MudText Typo="Typo.h6" Align="Align.Center">@GetPrice(AccountProduct.Premium) / @Cycle?.GetDescription()</MudText>
            <MudGrid Spacing="1" Justify="Justify.SpaceBetween">
                <MudItem xs="9">
                    <MudText>@Translations.NoAds</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Icon="@IconsFA.Solid.Icon("check").Font" Color="Color.Success" Size="Size.Small" Label="true" Class="chip-no-text" />
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.MyPlatforms</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Premium.GetRestrictions().FavoriteProviders.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.MySuggestions</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Premium.GetRestrictions().MySuggestions.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="8">
                    <MudText>@Profile.Resources.Translations.Watched</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Premium.GetRestrictions().Watched.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.Watching</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Premium.GetRestrictions().Watching.ToString()</MudText>
                    </MudChip>
                </MudItem>
                <MudItem xs="9">
                    <MudText>@Profile.Resources.Translations.Wishlist</MudText>
                </MudItem>
                <MudItem>
                    <MudChip T="string" Color="Color.Default" Size="Size.Small" Label="true">
                        <MudText>@AccountProduct.Premium.GetRestrictions().Wishlist.ToString()</MudText>
                    </MudChip>
                </MudItem>
            </MudGrid>
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Size="AppStateStatic.Size" OnClick="@(() => OpenCheckout(AccountProduct.Premium))">
                @Translations.Select
            </MudButton>
        </MudCardActions>
    </MudCard>
</MudStack>

@code {
    [Parameter][EditorRequired] public bool IsAuthenticated { get; set; }

    [Parameter][EditorRequired] public PaymentProvider Provider { get; set; }
    [Parameter][EditorRequired] public AccountCycle? Cycle { get; set; }

    private string GetPrice(AccountProduct product)
    {
        if (product == AccountProduct.Standard)
        {
            return Cycle == AccountCycle.Monthly ? "$0.99" : "$9.99";
        }
        else if (product == AccountProduct.Premium)
        {
            return Cycle == AccountCycle.Monthly ? "$1.99" : "$19.99";
        }
        else
        {
            return "$0.00";
        }
    }

    protected async Task OpenCheckout(AccountProduct product)
    {
        try
        {
            if (IsAuthenticated)
            {
                if (Provider == PaymentProvider.Paddle)
                {
                    // var lang = await AppStateStatic.GetAppLanguage(JsRuntime);
                    // await JavascriptVoidAsync("openCheckout", priceId, Client?.Email, lang.ToString(), Client?.AuthPaddle?.CustomerId, Client?.AuthPaddle?.AddressId);
                    await ShowWarning($"Provider not implemented: {Provider.GetName()}");
                }
                else if (Provider == PaymentProvider.Apple)
                {
                    await JavascriptVoidAsync("openAppleCheckout", "sd_standard_monthly");
                }
                else
                {
                    await ShowWarning($"Provider not implemented: {Provider.GetName()}");
                }
            }
            else
            {
                await ShowWarning(GlobalTranslations.YouMustLoggedSubscribe);
            }
        }
        catch (Exception ex)
        {
            await ProcessException(ex);
        }
    }
}
