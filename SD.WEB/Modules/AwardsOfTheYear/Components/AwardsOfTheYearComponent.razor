@using SD.WEB.Modules.Collections.Core
@using SD.WEB.Modules.Profile.Core
@inherits PageCore<AwardsOfTheYearComponent>
@inject TmdbListApi TmdbListApi
@inject WatchedListApi WatchedListApi
@inject WatchingListApi WatchingListApi
@inject WishListApi WishListApi

<SectionComponent Title="@EnumLists.AwardsOfTheYear.GetName()" IconName="@IconsFA.Solid.Icon("trophy").Font">
    <ActionFragment>
        <MudIconButton Icon="@IconsFA.Solid.Icon("expand").Font" Variant="Variant.Filled" Color="Color.Primary" Href="@("/best-awards-year")" />
    </ActionFragment>
    <BodyFragment>
        <MediaList MediaListApi="TmdbListApi" List="@EnumLists.AwardsOfTheYear" Watched="WatchedList" Watching="WatchingList" Wish="WishList"
                   ShowPrivateAction="true" IsAuthenticated="IsAuthenticated" CommentsIsImage="true" ShowHead="false" FullPage="true">
        </MediaList>
    </BodyFragment>
</SectionComponent>

@code {
    public WatchedList? WatchedList { get; set; }
    public WatchingList? WatchingList { get; set; }
    public WishList? WishList { get; set; }

    protected override void OnInitialized()
    {
        WatchedListApi.DataChanged += model =>
        {
            WatchedList = model;
            StateHasChanged();
        };
        WatchingListApi.DataChanged += model =>
        {
            WatchingList = model;
            StateHasChanged();
        };
        WishListApi.DataChanged += model =>
        {
            WishList = model;
            StateHasChanged();
        };
    }

    protected override async Task LoadDataRender()
    {
        WatchedList = await WatchedListApi.Get(IsAuthenticated, null);
        WatchingList = await WatchingListApi.Get(IsAuthenticated, null);
        WishList = await WishListApi.Get(IsAuthenticated, null);
    }

}