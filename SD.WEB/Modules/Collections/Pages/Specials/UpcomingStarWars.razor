@page "/collections/upcoming-star-wars"
<SeoHeader Title="Collections | Upcoming Star Wars Movies & TV Shows" Description="@SD.WEB.Resources.Credit.UpcomingStarWarsMoviesTVShows" Keywords="@(new[] { "Upcoming Star Wars Movies & TV Shows" })" Url="/collections/upcoming-star-wars"></SeoHeader>
@using SD.WEB.Modules.Collections.Core
@using SD.WEB.Modules.Profile.Core
@using SD.WEB.Modules.Collections.Components
@inherits PageCore<UpcomingStarWars>
@inject TmdbListApi TmdbListApi
@inject WatchedListApi WatchedListApi
@inject WatchingListApi WatchingListApi
@inject WishListApi WishListApi

<GoogleAdSense Settings="@Settings" Principal="@Principal" Section="@GoogleAdSense.AdUnit.Collections"></GoogleAdSense>

<HeadPage Title="Upcoming Star Wars Movies & TV Shows" ImageSource="logo/star-wars.png" Text="@SD.WEB.Resources.Credit.UpcomingStarWarsMoviesTVShows" IsAuthenticated="IsAuthenticated"></HeadPage>

<MediaListFull MediaListApi="TmdbListApi" List="@EnumLists.UpcomingStarWarsMoviesTvShows" Watched="WatchedList" Watching="WatchingList" Wish="WishList"
               IsAuthenticated="IsAuthenticated" FullPage="true" ShowHead="false">
</MediaListFull>

@code {
    public Settings? Settings { get; set; }
    public ClientePrincipal? Principal { get; set; }

    public WatchedList? WatchedList { get; set; }
    public WatchingList? WatchingList { get; set; }
    public WishList? WishList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        WatchedListApi.DataChanged += model =>
        {
            WatchedList = model;
            StateHasChanged();
        };
        WatchingListApi.DataChanged += model =>
        {
            WatchingList = model;
            StateHasChanged();
        };
        WishListApi.DataChanged += model =>
        {
            WishList = model;
            StateHasChanged();
        };
    }

    protected override async Task LoadDataRender()
    {
        WatchedList = await WatchedListApi.Get(IsAuthenticated, null);
        WatchingList = await WatchingListApi.Get(IsAuthenticated, null);
        WishList = await WishListApi.Get(IsAuthenticated, null);

        Settings = await CacheSettingsApi.GetSettings();
        Principal = await PrincipalApi.Get(IsAuthenticated);
    }

}