@page "/collections/upcoming-dc"
<SeoHeader Title="Collections | Upcoming DC Movies & TV Shows" Description="@SD.WEB.Resources.Credit.UpcomingDCMoviesTVShows" Keywords="@(new[] { "Upcoming DC Movies & TV Shows" })" Url="/collections/upcoming-dc"></SeoHeader>
@using SD.WEB.Modules.Collections.Core
@using SD.WEB.Modules.Profile.Core
@using SD.WEB.Modules.Collections.Components
@inherits PageCore<UpcomingDC>
@inject TmdbListApi TmdbListApi
@inject WatchedListApi WatchedListApi
@inject WatchingListApi WatchingListApi
@inject WishListApi WishListApi

<HeadPage Title="Upcoming DC Movies & TV Shows" ImageSource="logo/dc.png" Text="@SD.WEB.Resources.Credit.UpcomingDCMoviesTVShows" IsAuthenticated="IsAuthenticated"></HeadPage>

<GoogleAdSense Settings="@Settings" Principal="@Principal" Section="@GoogleAdSense.AdUnit.Collections"></GoogleAdSense>

<MediaListFull MediaListApi="TmdbListApi" List="@EnumLists.UpcomingDcMoviesTvShows" Watched="WatchedList" Watching="WatchingList" Wish="WishList"
               ShowPrivateAction="true" IsAuthenticated="IsAuthenticated" FullPage="true" ShowHead="false">
</MediaListFull>

@code {
    public Settings? Settings { get; set; }
    public ClientePrincipal? Principal { get; set; }

    public WatchedList? WatchedList { get; set; }
    public WatchingList? WatchingList { get; set; }
    public WishList? WishList { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        WatchedListApi.DataChanged += model =>
        {
            WatchedList = model;
            StateHasChanged();
        };
        WatchingListApi.DataChanged += model =>
        {
            WatchingList = model;
            StateHasChanged();
        };
        WishListApi.DataChanged += model =>
        {
            WishList = model;
            StateHasChanged();
        };
    }

    protected override async Task LoadDataRender()
    {
        Settings = await CacheSettingsApi.GetSettings();
        Principal = await PrincipalApi.Get(IsAuthenticated);

        WatchedList = await WatchedListApi.Get(IsAuthenticated, null);
        WatchingList = await WatchingListApi.Get(IsAuthenticated, null);
        WishList = await WishListApi.Get(IsAuthenticated, null);
    }

}