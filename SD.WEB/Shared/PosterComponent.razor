@inherits ComponentCore<PosterComponent>

<Blazorise.Link Clicked="@Clicked" Position="Position.Relative" Style="cursor: pointer;">
    @if (MediaType == MediaType.person)
    {
        <Badge Color="Color.Light" TextColor="TextColor.Dark" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; left: 3px; z-index: 1; white-space: inherit;">@Title</Badge>
    }
    @if (Runtime.HasValue)
    {
        <Badge Color="Color.Light" TextColor="TextColor.Dark" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; left: 3px; z-index: 1;">@Runtime.FormatRuntime()</Badge>
    }
    @if (Date.HasValue)
    {
        if (Date.Value < DateTime.Now.AddMonths(-3) || OnlyYear)
        {
            <Badge Color="Color.Light" TextColor="TextColor.Dark" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; left: 3px; z-index: 1;">@Date.Value.Year</Badge>
        }
        else
        {
            <Badge Color="Color.Light" TextColor="TextColor.Dark" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; left: 3px; z-index: 1;">@Date.Value.ToShortDateString()</Badge>
        }
    }
    @if (Rating.HasValue && string.IsNullOrEmpty(RankUpDown))
    {
        if (Rating >= 7.95)
        {
            <Badge Color="Color.Success" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; right: 3px; z-index: 1;">@Rating.Value.ToString("#.#")</Badge>
        }
        else if (Rating >= 5.95)
        {
            <Badge Color="Color.Warning" TextColor="TextColor.Dark" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; right: 3px; z-index: 1;">@Rating.Value.ToString("#.#")</Badge>
        }
        else if (Rating > 0)
        {
            <Badge Color="Color.Danger" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; right: 3px; z-index: 1;">@Rating.Value.ToString("#.#")</Badge>
        }
    }
    @if (!string.IsNullOrEmpty(RankUpDown) && RankUpDown != "0")
    {
        @if (RankUpDown.Contains("+"))
        {
            <Badge Color="Color.Success" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; right: 3px; z-index: 1;">
                <Blazorise.Icon Name="FontAwesomeIcons.ArrowUp" TextColor="TextColor.Light"></Blazorise.Icon> @RankUpDown.Replace("+", "")
            </Badge>
        }
        else
        {
            <Badge Color="Color.Danger" Style="padding: 0.15rem; font-size: 0.65rem; position: absolute; top: 3px; right: 3px; z-index: 1;">
                <Blazorise.Icon Name="FontAwesomeIcons.ArrowDown" TextColor="TextColor.Light"></Blazorise.Icon> @RankUpDown.Replace("-", "")
            </Badge>
        }
    }
    @if (string.IsNullOrEmpty(Poster))
    {
        <CardImage Source="images/noimage.png" Alt="@Title" title="@Title" Style="cursor: pointer; border-radius: 6px;"></CardImage>

        @if (MediaType != MediaType.person)
        {
            <Div Style="position: absolute; left: 0; right: 0; margin-left: auto; margin-right: auto; top: 2rem; color: black; text-align: center; font-weight: 500; font-size: smaller;">
                @Title
            </Div>
        }
    }
    else
    {
        if (ShowWished)
        {
            var wishedMovie = WishList?.Contains(MediaType.movie, TmdbId) ?? false;
            var wishedShow = WishList?.Contains(MediaType.tv, TmdbId) ?? false;
            if (wishedMovie || wishedShow)
            {
                <Blazorise.Icon Name="FontAwesomeIcons.Bookmark" TextColor="TextColor.Light" Position="Position.Absolute"
                                Style="bottom: 5px; left: 5px; z-index: 1;">
                </Blazorise.Icon>
            }
        }

        var watchedMovie = false;
        var watchedShow = false;
        if (ShowWatched)
        {
            watchedMovie = WatchedList?.Contains(MediaType.movie, TmdbId) ?? false;
            watchedShow = WatchedList?.Contains(MediaType.tv, TmdbId) ?? false;
            if (watchedMovie || watchedShow)
            {
                <Blazorise.Icon Name="FontAwesomeIcons.Eye" TextColor="TextColor.Light" Position="Position.Absolute"
                                Style="bottom: 2px; right: 5px; z-index: 1;">
                </Blazorise.Icon>
            }
        }

        <CardImage Source="@Poster" Alt="@Title" title="@Title" Style=@($"cursor: pointer; border-radius: 6px; {(watchedMovie || watchedShow ? "filter: grayscale(100%);" : "")}")></CardImage>
    }
    @if (!string.IsNullOrEmpty(Comments))
    {
        if (CommentImage)
        {
            <CardBody Padding="Padding.Is1">
                <Row HorizontalGutter="4" VerticalGutter="4">
                    @foreach (var item in Comments.Split(CommentsSeparator))
                    {
                        <Column ColumnSize="ColumnSize.Is4" Border="Border.Secondary" Style="border-color: lightgray !important; padding: 1px;">
                            <Image Source="@item" alt="@item" title="@item.Replace("logo/", "").Replace(".png", "")" Style="width: 100%"></Image>
                        </Column>
                    }
                </Row>
            </CardBody>
        }
        else
        {
            <CardBody Padding="Padding.Is1">
                @foreach (var item in Comments.Split(CommentsSeparator))
                {
                    <Badge Color="Color.Secondary" Margin="Margin.Is1.FromEnd" Style="white-space: inherit; font-size: 0.65rem;">@item</Badge>
                }
            </CardBody>
        }
    }
</Blazorise.Link>

@code {
    [Parameter] [EditorRequired] public WatchedList? WatchedList { get; set; }
    [Parameter] [EditorRequired] public WishList? WishList { get; set; }

    [Parameter] public EventCallback<MouseEventArgs> Clicked { get; set; }
    [Parameter] public DateTime? Date { get; set; }
    [Parameter] public double? Rating { get; set; }
    [Parameter] public string? Poster { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Comments { get; set; }
    [Parameter] public string? CommentsSeparator { get; set; } = ",";
    [Parameter] public string? TmdbId { get; set; }
    [Parameter] public MediaType MediaType { get; set; }
    [Parameter] public int? Runtime { get; set; }
    [Parameter] public bool ShowWished { get; set; } = true;
    [Parameter] public bool ShowWatched { get; set; } = true;
    [Parameter] public bool OnlyYear { get; set; }
    [Parameter] public string? RankUpDown { get; set; }
    [Parameter] public bool CommentImage { get; set; }
}