@inherits ComponentCore<PosterComponent>

<div>
    <div @onclick="@Clicked" style="cursor: pointer; position: relative;">
        @if (MediaType == MediaType.person)
        {
            <MudChip T="string" Color="Color.Info" Size="Size.Medium" Label="true"
                     Style="padding: 0.2rem; position: absolute; top: 0; left: 0; white-space: inherit; height: auto; z-index: 1; text-align: center;">
                @Title
            </MudChip>
        }
        @if (Runtime.HasValue)
        {
            <MudChip T="string" Color="Color.Info" Size="Size.Medium" Label="true"
                     Style="padding: 0.2rem; position: absolute; top: 0; left: 0; white-space: inherit; height: auto; z-index: 1;">
                @Runtime.FormatRuntime()
            </MudChip>
        }
        @if (Date.HasValue)
        {
            if (Date.Value < DateTime.Now.AddMonths(-3) || OnlyYear)
            {
                <MudChip T="string" Color="Color.Info" Size="Size.Medium" Label="true"
                         Style="padding: 0.2rem; position: absolute; top: 0; left: 0; white-space: inherit; height: auto; z-index: 1;">
                    @Date.Value.Year
                </MudChip>
            }
            else
            {
                <MudChip T="string" Color="Color.Info" Size="Size.Medium" Label="true"
                         Style="padding: 0.2rem; position: absolute; top: 0; left: 0; white-space: inherit; height: auto; z-index: 1;">
                    @Date.Value.ToShortDateString()
                </MudChip>
            }
        }
        @if (Rating.HasValue && string.IsNullOrEmpty(RankUpDown))
        {
            if (Rating >= 7.95)
            {
                <MudChip T="string" Color="Color.Success" Size="Size.Medium" Label="true"
                         Style="padding: 0.2rem; position: absolute; top: 0; right: 0; white-space: inherit; height: auto; z-index: 1;">
                    @Rating.Value.ToString("#.#")
                </MudChip>
            }
            else if (Rating >= 5.95)
            {
                <MudChip T="string" Color="Color.Warning" Size="Size.Medium" Label="true"
                         Style="padding: 0.2rem; position: absolute; top: 0; right: 0; white-space: inherit; height: auto; z-index: 1;">
                    @Rating.Value.ToString("#.#")
                </MudChip>
            }
            else if (Rating > 0)
            {
                <MudChip T="string" Color="Color.Error" Size="Size.Medium" Label="true"
                         Style="padding: 0.2rem; position: absolute; top: 0; right: 0; white-space: inherit; height: auto; z-index: 1;">
                    @Rating.Value.ToString("#.#")
                </MudChip>
            }
        }
        @if (!string.IsNullOrEmpty(RankUpDown) && RankUpDown != "0")
        {
            @if (RankUpDown.Contains("+"))
            {
                <MudChip T="string" Color="Color.Success" Size="Size.Medium" Label="true" Icon="@Icons.Material.Filled.ArrowUpward"
                         Style="padding: 0.2rem; position: absolute; top: 0; right: 0; white-space: inherit; height: auto; z-index: 1;">
                    @RankUpDown.Replace("+", "")
                </MudChip>
            }
            else
            {
                <MudChip T="string" Color="Color.Error" Size="Size.Medium" Label="true" Icon="@Icons.Material.Filled.ArrowDownward"
                         Style="padding: 0.2rem; position: absolute; top: 0; right: 0; white-space: inherit; height: auto; z-index: 1;">
                    @RankUpDown.Replace("+", "")
                </MudChip>
            }
        }
        @{
            if (ShowWished)
            {
                var wishedMovie = WishList?.Contains(MediaType.movie, TmdbId) ?? false;
                var wishedShow = WishList?.Contains(MediaType.tv, TmdbId) ?? false;
                if (wishedMovie || wishedShow)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Bookmark" Color="Color.Info" Class="absolute" Style="bottom: 6px; left: 5px; z-index: 1;"></MudIcon>
                }
            }

            var watchedMovie = false;
            var watchedShow = false;
            if (ShowWatched)
            {
                watchedMovie = WatchedList?.Contains(MediaType.movie, TmdbId) ?? false;
                watchedShow = WatchedList?.Contains(MediaType.tv, TmdbId) ?? false;
                if (watchedMovie || watchedShow)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Visibility" Color="Color.Info" Class="absolute" Style="bottom: 6px; right: 5px; z-index: 1;"></MudIcon>
                }
            }

            <MudImage Src="@Poster" FallbackSrc="images/no-image.png" Alt="@Title" Fluid="true" ObjectFit="ObjectFit.Contain"></MudImage>

            if (string.IsNullOrEmpty(Poster))
            {
                <MudText Class="absolute" Style="left: 0; right: 0; margin-left: auto; margin-right: auto; top: 2rem; text-align: center; font-weight: 500; font-size: smaller;">
                    @Title
                </MudText>
            }
        }
    </div>
    @if (!string.IsNullOrEmpty(Comments))
    {
        if (CommentImage)
        {
            <MudGrid Spacing="2" Justify="Justify.FlexStart">
                @foreach (var item in Comments.Split(CommentsSeparator))
                {
                    <MudItem xs="4">
                        <MudTooltip Text="@item.Replace("logo/", "").Replace(".png", "")">
                            <MudImage Src="@item" Alt="@item" Fluid="true" ObjectFit="ObjectFit.Contain"></MudImage>
                        </MudTooltip>
                    </MudItem>
                }
            </MudGrid>
        }
        else
        {
            @foreach (var item in Comments.Split(CommentsSeparator))
            {
                <MudChip T="string" Color="Color.Secondary" Size="Size.Medium" Label="true" Style="padding: 0.2rem; white-space: inherit; height: auto; text-align: center;">
                    @item
                </MudChip>
            }
        }
    }
</div>

@code {
    [Parameter][EditorRequired] public WatchedList? WatchedList { get; set; }
    [Parameter][EditorRequired] public WishList? WishList { get; set; }

    [Parameter] public EventCallback<MouseEventArgs> Clicked { get; set; }
    [Parameter] public DateTime? Date { get; set; }
    [Parameter] public double? Rating { get; set; }
    [Parameter] public string? Poster { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Comments { get; set; }
    [Parameter] public string? CommentsSeparator { get; set; } = ",";
    [Parameter] public string? TmdbId { get; set; }
    [Parameter] public MediaType MediaType { get; set; }
    [Parameter] public int? Runtime { get; set; }
    [Parameter] public bool ShowWished { get; set; } = true;
    [Parameter] public bool ShowWatched { get; set; } = true;
    [Parameter] public bool OnlyYear { get; set; }
    [Parameter] public string? RankUpDown { get; set; }
    [Parameter] public bool CommentImage { get; set; }
}