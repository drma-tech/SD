@using SD.WEB.Layout
@using SD.WEB.Modules.Auth.Resources
<ErrorBoundary @ref="_boundary">
    <ChildContent>
        <CascadingAuthenticationState>
            <Router AppAssembly="@typeof(App).Assembly">
                <Found Context="routeData">
                    <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                        <NotAuthorized>
                            <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true">
                                @Translations.YouAreNotAuthorized
                            </MudAlert>
                        </NotAuthorized>
                        <Authorizing>
                            <MudAlert Severity="Severity.Warning" Variant="Variant.Filled" Dense="true"
                                      Icon="@IconsFA.Solid.Icon("spinner").WithAnimation(IconAnimation.Spin).Font">
                                @Translations.AuthenticationInProgress
                            </MudAlert>
                        </Authorizing>
                    </AuthorizeRouteView>
                    <FocusOnNavigate RouteData="@routeData" Selector="h1" />
                </Found>
                <NotFound>
                    <PageTitle>Not found</PageTitle>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true">
                            @Translations.NothingThisAddress
                        </MudAlert>
                    </LayoutView>
                </NotFound>
            </Router>
        </CascadingAuthenticationState>
    </ChildContent>
    <ErrorContent Context="ex">
        <MudAlert Severity="Severity.Error" Variant="Variant.Filled" Dense="true">
            This operation could not be processed. Please email our <MudLink Href="mailto:support@streamingdiscovery.com" style="cursor: pointer;">support</MudLink> with the following details:
            @ex.StackTrace
        </MudAlert>
    </ErrorContent>
</ErrorBoundary>

@code {
    ErrorBoundary? _boundary;

    protected override void OnParametersSet()
    {
        _boundary?.Recover();
    }

}