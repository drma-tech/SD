@using SD.WEB.Modules.Auth.Resources

@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@implements IDisposable

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    <div class="alert alert-danger" role="alert">
                        @Translations.YouAreNotAuthorized
                    </div>
                </NotAuthorized>
                <Authorizing>
                    <div class="alert alert-warning" role="alert">
                        <div class="spinner-border spinner-border-sm" role="status">
                            <span class="sr-only">@Translations.AuthenticationInProgress</span>
                        </div>
                        @Translations.AuthenticationInProgress
                    </div>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <div class="alert alert-danger" role="alert">
                    @Translations.NothingThisAddress
                </div>
            </LayoutView>
        </NotFound>
    </Router>

    <ModalProvider></ModalProvider>
    <MessageProvider />
</CascadingAuthenticationState>

@code {
    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    private async void HandleLocationChanged(object? sender, Microsoft.AspNetCore.Components.Routing.LocationChangedEventArgs e)
    {
        await Task.Delay(100);
        if (OperatingSystem.IsBrowser())
        {
            var js = (IJSInProcessRuntime)JSRuntime;
            js.InvokeVoid("eval", "if (window.clarity) clarity('set', 'page', window.location.href);");
        }
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }
}